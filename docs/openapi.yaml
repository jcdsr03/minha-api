openapi: 3.0.3
info:
  title: Tools & Toys API
  version: 1.0.0
servers:
  - url: http://localhost:3000/v1
paths:
  /produtos:
    get:
      summary: Lista produtos
      parameters:
        - in: query
          name: page
          schema: { type: integer, minimum: 1, default: 1 }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 100, default: 20 }
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items: { $ref: "#/components/schemas/Produto" }
                  page:  { type: integer }
                  limit: { type: integer }
                  total: { type: integer }
    post:
      summary: Cria produto
      security: [{ bearerAuth: [] }]
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/ProdutoCreate" }
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema: { $ref: "#/components/schemas/Produto" }
  /produtos/{id}:
    get:
      summary: Detalha produto
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer, minimum: 1 }
      responses:
        "200": { description: OK, content: { application/json: { schema: { $ref: "#/components/schemas/Produto" } } } }
        "404": { description: Not Found }
    put:
      summary: Atualiza produto
      security: [{ bearerAuth: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer, minimum: 1 }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: "#/components/schemas/ProdutoUpdate" }
      responses:
        "200": { description: OK, content: { application/json: { schema: { $ref: "#/components/schemas/Produto" } } } }
        "404": { description: Not Found }
    delete:
      summary: Remove produto
      security: [{ bearerAuth: [] }]
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer, minimum: 1 }
      responses:
        "204": { description: No Content }
        "404": { description: Not Found }
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Produto:
      type: object
      required: [id, nome, preco, disponivel, criadoEm, atualizadoEm]
      properties:
        id: { type: integer, example: 1 }
        nome: { type: string, example: "Chaveiro Rinoceronte" }
        preco: { type: number, format: double, example: 29.9, minimum: 0.01 }
        disponivel: { type: boolean, example: true }
        criadoEm: { type: string, format: date-time }
        atualizadoEm: { type: string, format: date-time }
    ProdutoCreate:
      type: object
      required: [nome, preco]
      properties:
        nome: { type: string, minLength: 2 }
        preco: { type: number, minimum: 0.01 }
        disponivel: { type: boolean, default: true }
    ProdutoUpdate:
      allOf:
        - $ref: "#/components/schemas/ProdutoCreate"
